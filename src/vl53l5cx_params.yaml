vl53l5cx:
  address:
    {
      type: int_array,
      default_value: [0x29],
      description: "7-bit I2C device addresses.",
      read_only: true,
      validation:
        { unique<>: [], not_empty<>: [], element_bounds<>: [0x08, 0x77] },
    }

  frame_id:
    {
      type: string_array,
      default_value: ["world"],
      description: "Frame-ids for each device.",
      read_only: true,
      validation: { not_empty<>: [] },
    }

  part_number:
    {
      type: string,
      default_value: "vl53l5cx",
      description: "Part number, affects camera info.",
      read_only: true,
      validation: { one_of<>: [["vl53l5cx", "vl53l7cx"]] },
    }

  i2c_bus: 
    {
      type: string,
      default_value: "i2c-1",
      description: "Name of I2C bus.",
      read_only: true,
    }

  gpiochip:
    {
      type: string,
      default_value: "gpiochip0",
      description: "Name of GPIO chip.",
      read_only: true,
    }
  rst_pin:
    {
      type: int_array,
      default_value: [],
      description: "GPIO lines for RST pins.",
      read_only: true,
      validation: { unique<>: [] },
    }
  lpn_pin:
    {
      type: int_array,
      default_value: [],
      description: "GPIO lines for LPN pins.",
      read_only: true,
      validation: { unique<>: [] },
    }
  int_pin:
    {
      type: int_array,
      default_value: [],
      description: "GPIO lines for INT pins.",
      read_only: true,
      validation: { unique<>: [] },
    }

  resolution:
    {
      type: int,
      default_value: 4,
      description: "Sensor resolution.",
      validation: { one_of<>: [[4, 8]] },
    }

  frequency: { type: int, default_value: 1, description: "Ranging frequency." }

  integration_time:
    {
      type: int,
      default_value: 5,
      description: "Integration time (see the device documentation). If set to 1, the ranging mode is set to 'continuous'.",
      validation: { bounds<>: [1, 1000] },
    }

  filter_outputs:
    {
      type: bool,
      default_value: false,
      description: "Set distance values with invalid ranging status to NaN.",
    }

  calibration:
    reflectance:
      {
        type: int,
        default_value: 0,
        description: "Target reflectance in percent.",
      }
    n_samples:
      {
        type: int,
        default_value: 1,
        description: "Number of samples used for calibration.",
        validation: { bounds<>: [1, 16] },
      }
    distance:
      {
        type: int,
        default_value: 600,
        description: "Target distance in mm.",
        validation: { bounds<>: [600, 3000] },
      }

  xtalk_data:
    {
      type: int_array,
      default_value: [],
      description: "Xtalk calibration data. Generated by the calibration function.",
    }
